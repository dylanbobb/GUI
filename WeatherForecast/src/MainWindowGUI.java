// Programmed by: Dylan Bobb
// Midterm for the course 420-203-RE
// Date: 10/2/2018
import java.io.File;
import javax.imageio.ImageIO;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileFilter;
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author cstuser
 */
public class MainWindowGUI extends javax.swing.JFrame {

    /**
     * Creates new form MainWindowGUI
     */
    public MainWindowGUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titleLabel = new javax.swing.JLabel();
        tempField = new javax.swing.JTextField();
        degreesLabel = new javax.swing.JLabel();
        precipCheck = new javax.swing.JCheckBox();
        nightCheck = new javax.swing.JCheckBox();
        fahrenheitCheck = new javax.swing.JCheckBox();
        setBtn = new javax.swing.JButton();
        todayBtn = new javax.swing.JButton();
        infoLabel = new javax.swing.JLabel();
        imagePanel1 = new weatherforecast.ImagePanel();
        menuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        overrideMenuItem = new javax.swing.JMenuItem();
        quitMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        titleLabel.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        titleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleLabel.setText("Weather Forecast");

        degreesLabel.setText("Degrees");

        precipCheck.setText("Precipitations?");

        nightCheck.setText("Night?");

        fahrenheitCheck.setText("Fahrenheit?");

        setBtn.setText("Set Icon");
        setBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setBtnActionPerformed(evt);
            }
        });

        todayBtn.setText("Today's Weather");
        todayBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                todayBtnActionPerformed(evt);
            }
        });

        infoLabel.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        infoLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        infoLabel.setText("Press a button to begin");

        javax.swing.GroupLayout imagePanel1Layout = new javax.swing.GroupLayout(imagePanel1);
        imagePanel1.setLayout(imagePanel1Layout);
        imagePanel1Layout.setHorizontalGroup(
            imagePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        imagePanel1Layout.setVerticalGroup(
            imagePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        fileMenu.setText("File");

        overrideMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        overrideMenuItem.setText("Override");
        overrideMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                overrideMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(overrideMenuItem);

        quitMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Q, java.awt.event.InputEvent.CTRL_MASK));
        quitMenuItem.setText("Quit");
        quitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quitMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(quitMenuItem);

        menuBar.add(fileMenu);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(infoLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(titleLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(setBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 52, Short.MAX_VALUE)
                        .addComponent(todayBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(tempField, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(degreesLabel))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(nightCheck)
                                    .addComponent(precipCheck)
                                    .addComponent(fahrenheitCheck))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(imagePanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titleLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tempField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(degreesLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(precipCheck)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nightCheck)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fahrenheitCheck))
                    .addComponent(imagePanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(todayBtn)
                    .addComponent(setBtn))
                .addGap(18, 18, 18)
                .addComponent(infoLabel)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void setBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setBtnActionPerformed
        try
        {
            double degrees = Double.parseDouble(tempField.getText());
            boolean precip = precipCheck.isSelected();
            boolean night = nightCheck.isSelected();
            boolean fahrenheit = fahrenheitCheck.isSelected();
            
            if(fahrenheit)
            {
                updateF(degrees,precip,night);
            }
            else
            {
                updateC(degrees,precip,night);
            }
        }
        catch(Exception e)
        {
            imagePanel1.setImage("images/error.png");
            infoLabel.setText("Invalid input... Please try again later.");
        }
    }//GEN-LAST:event_setBtnActionPerformed

    private void quitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quitMenuItemActionPerformed
        System.exit(0);
    }//GEN-LAST:event_quitMenuItemActionPerformed

    private void overrideMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_overrideMenuItemActionPerformed
        final JFileChooser fc = new JFileChooser();
        
        fc.setCurrentDirectory(new File("./images"));
        
        fc.setFileFilter(new FileFilter()
        {
            @Override
            public boolean accept(File file) 
            {
                String[] acceptedExtensions = {".jpg", ".png", ".bmp"};
                for(String ext : acceptedExtensions)
                {
                    if(file.getName().toLowerCase().endsWith(ext))
                    {
                        return true;
                    }
                }
                return false;
            }

            @Override
            public String getDescription() 
            {
                return "Image Files";
            }
            
        });
        int returnVal = fc.showOpenDialog(null);
        
        if(returnVal == JFileChooser.APPROVE_OPTION)
        {
            File inputImageFile = fc.getSelectedFile();
            try
            {
                imagePanel1.setImage(ImageIO.read(inputImageFile));
                infoLabel.setText("Override Successfull");
            }
            catch(Exception e)
            {
                imagePanel1.setImage("images/error.png");
                infoLabel.setText("Something went wrong, please try again");
            } 
        }
        else
        {
            infoLabel.setText("Override cancelled");
        }
    }//GEN-LAST:event_overrideMenuItemActionPerformed

    private void todayBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_todayBtnActionPerformed
        tempField.setText("10");
        precipCheck.setSelected(true);
        nightCheck.setSelected(false);
        fahrenheitCheck.setSelected(false);
        
        setBtn.doClick(0);
    }//GEN-LAST:event_todayBtnActionPerformed

    
    public void updateF(double degrees, boolean precip, boolean night)
    {
        updateImageF(degrees,precip,night);
        updateTextF(degrees,precip,night);
    }
    
    public void updateC(double degrees, boolean precip, boolean night)
    {
        updateImageC(degrees,precip,night);
        updateTextC(degrees,precip,night);
    }
        
    public void updateImageF(double degrees, boolean precip, boolean night)
    {
        if(!precip)
        {
            if(night)
            {
                imagePanel1.setImage("images/clear_night.png");
            }
            else
            {
                imagePanel1.setImage("images/clear.png");
            }
        }
        else
        {
            if(degrees > 32)
            {
                if(night)
                {
                    imagePanel1.setImage("images/raining_night.png");
                }
                else
                {
                    imagePanel1.setImage("images/raining.png");
                }
            }
            else
            {
                if(night)
                {
                    imagePanel1.setImage("images/snowing_night.png");
                }
                else
                {
                    imagePanel1.setImage("images/snowing.png");
                }
            }
        }
    }
    
    public void updateImageC(double degrees, boolean precip, boolean night)
    {
        if(!precip)
        {
            if(night)
            {
                imagePanel1.setImage("images/clear_night.png");
            }
            else
            {
                imagePanel1.setImage("images/clear.png");
            }
        }
        else
        {
            if(degrees > 0)
            {
                if(night)
                {
                    imagePanel1.setImage("images/raining_night.png");
                }
                else
                {
                    imagePanel1.setImage("images/raining.png");
                }
            }
            else
            {
                if(night)
                {
                    imagePanel1.setImage("images/snowing_night.png");
                }
                else
                {
                    imagePanel1.setImage("images/snowing.png");
                }
            }
        }
    }
    
    private void updateTextF(double degrees, boolean precip, boolean night)
    {
        String timeString;
        String precipString;
        
        if(night)
        {
            timeString = "Tonight";
        }
        else
        {
            timeString = "Today";
        }
        
        if(precip)
        {
            if(degrees > 32)
            {
                precipString = "raining";
            }
            else
            {
                precipString = "snowing";
            }
        }
        else
        {
            precipString = "a clear sky";
        }
        
        infoLabel.setText(timeString + " is " + precipString + " with a temperature of " + degrees + "°F");
    }
    
    private void updateTextC(double degrees, boolean precip, boolean night)
    {
        String timeString;
        String precipString;
        
        if(night)
        {
            timeString = "Tonight";
        }
        else
        {
            timeString = "Today";
        }
        
        if(precip)
        {
            if(degrees > 0)
            {
                precipString = "raining";
            }
            else
            {
                precipString = "snowing";
            }
        }
        else
        {
            precipString = "a clear sky";
        }
        
        infoLabel.setText(timeString + " is " + precipString + " with a temperature of " + degrees + "°C");
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainWindowGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainWindowGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainWindowGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainWindowGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainWindowGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel degreesLabel;
    private javax.swing.JCheckBox fahrenheitCheck;
    private javax.swing.JMenu fileMenu;
    private weatherforecast.ImagePanel imagePanel1;
    private javax.swing.JLabel infoLabel;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JCheckBox nightCheck;
    private javax.swing.JMenuItem overrideMenuItem;
    private javax.swing.JCheckBox precipCheck;
    private javax.swing.JMenuItem quitMenuItem;
    private javax.swing.JButton setBtn;
    private javax.swing.JTextField tempField;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JButton todayBtn;
    // End of variables declaration//GEN-END:variables
}
